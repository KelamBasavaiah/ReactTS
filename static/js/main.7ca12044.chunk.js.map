{"version":3,"sources":["CssModules/Gallery.module.css","Components/Header.tsx","Components/ExContext.tsx","Components/Home.tsx","Components/Faq.tsx","Components/Gallery.tsx","Components/customHook.tsx","Table/Table.tsx","models/formModel.ts","Components/userForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","to","exact","activeStyle","color","initialState","count","reducer","state","action","type","Error","ExContext","React","memo","useReducer","dispatch","useState","text","memoizedValue","useMemo","onClick","EContext","createContext","Example1","v","useContext","console","log","Consumer","Home","setText","text1","setText1","useCallback","useRef","Provider","value","onChange","event","target","placeholder","Faq","Gallery","list","setList","loading","setLoading","refresh","setrefresh","offset","setOffset","perPage","pageCount","setPageCount","recordCount","setRecordCount","useEffect","fetch","then","res","json","result","length","slice","Math","ceil","tableRows","Fragment","map","data","index","gCss","card","src","url","img","title","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","e","selectedPage","selected","containerClassName","activeClassName","useGetListCount","setCount","Table","id","body","filename","style","textalign","userDetail","name","mobile","mail","language","city","gender","this","languageList","label","UserForm","setForm","uform","formModel","inputChange","checked","push","filter","x","onSubmit","preventDefault","alert","JSON","stringify","i","includes","htmlFor","App","path","component","userForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ca12044.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Gallery_card___Ps2X\"};","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nconst Header = () => {    \r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"logo\">\r\n                    <NavLink to=\"/\">Hi !</NavLink>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to=\"/\" exact activeStyle={{ color: '#2a6496' }}>Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/Table\" exact activeStyle={{ color: '#2a6496' }}>Table</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/Gallery\" exact activeStyle={{ color: '#2a6496' }}>Gallery</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/userForm\" exact activeStyle={{ color: '#2a6496' }}>User Form</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/FAQ\" exact activeStyle={{ color: '#2a6496' }}>FAQ</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext, useReducer,useMemo } from 'react';\r\nconst initialState = { count: 0 };\r\n\r\nfunction reducer(state:any, action:any) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return { count: state.count + 1 };\r\n    case 'decrement':\r\n      return { count: state.count - 1 };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst ExContext = React.memo(({}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [text, setText] = React.useState('intial');\r\n  //console.log('Render:Ex context');\r\n  const memoizedValue = useMemo(() => text+' lol', [state,text]);\r\n  return (\r\n    <>\r\n    <div >\r\n        {/* <button onClick={()=>setText(sign)}>Call</button> */}\r\n        <p>Call bcak text {text} and use memo {memoizedValue}</p>\r\n      </div>\r\n      \r\n     \r\n      Reducer Count: {state.count}\r\n      <button onClick={() => dispatch({ type: 'decrement' })}>-</button>\r\n      <button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n      \r\n    </>\r\n  );\r\n});\r\n\r\nexport default ExContext;\r\n\r\n\r\n","import React,{useRef,useEffect, useContext} from 'react';\r\nimport ExContext from './ExContext';\r\n\r\nconst EContext = React.createContext('');\r\nfunction Home() {\r\n\r\n    const [text, setText] = React.useState('');\r\n    const [text1, setText1] = React.useState('');\r\n\r\n    //console.log('Render:Home ');\r\n    const handleText = (event:any) => {setText(event.target.value);};\r\n    const handleText1 = (event:any) => {setText1(event.target.value);};\r\n\r\n    const addSignature=React.useCallback(()=>{return text+' KB';},[text]);\r\n    const inputRef = useRef();\r\n   // useEffect(() => {inputRef.current.focus();}, []);\r\n   interface sign {\r\n    bio: string,\r\n    open: boolean,\r\n  }\r\n    return (\r\n        <EContext.Provider value={text}>\r\n            <p>Home Page</p>\r\n            <div >\r\n                <input type=\"text\"  value={text} onChange={handleText} placeholder='memo ex' />\r\n                <input type=\"text\" value={text1} onChange={handleText1} placeholder='call back support' />\r\n            </div>\r\n            <ExContext />\r\n            <Example1></Example1>\r\n        </EContext.Provider>\r\n\r\n    );\r\n}\r\n\r\nfunction Example1(){\r\n    const v=useContext(EContext);\r\n    return(\r\n        <>\r\n        {console.log(v)}\r\n        <EContext.Consumer>\r\n            \r\n            {(text)=>{return(<p>Passed down Context value :- {text}</p>)}}\r\n        </EContext.Consumer>\r\n        </>\r\n    )\r\n}\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Faq(){\r\n    return(\r\n        <p>Faq Page</p>\r\n    );\r\n}\r\nexport default Faq;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useGetListCount from '../Components/customHook';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { CSVLink } from \"react-csv\";\r\nimport '../App.css';\r\nimport gCss from '../CssModules/Gallery.module.css'\r\n\r\n\r\nconst Gallery=()=>{\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setrefresh] = useState(0); \r\n    \r\n    const [offset, setOffset] = useState(0);\r\n    const [perPage] = useState(10);\r\n    const [pageCount, setPageCount] = useState(0)\r\n    const[recordCount,setRecordCount]=useState(0)\r\n  \r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setRecordCount(result.length);\r\n                    setList(result);\r\n                    setLoading(true);                    \r\n                    setList(result.slice(offset, offset + perPage));\r\n                    setPageCount(Math.ceil(result.length / perPage)); \r\n                    console.log(list, loading,offset,pageCount);                     \r\n                }\r\n        )                                                     \r\n        //return()=>{alert('Use effect Clean up Function running')}\r\n    }, [refresh,offset]);\r\n\r\n    const handlePageClick = (e:any) => {\r\n        const selectedPage = e.selected;\r\n        setOffset(selectedPage *perPage)\r\n    };\r\n    let tableRows = null;\r\n\r\n    if (list) {\r\n        tableRows = <React.Fragment>\r\n            {list.map((data:any, index) => {\r\n                return (\r\n                    <div className={gCss.card}>\r\n                        <img src={data.url} className={gCss.img}></img>\r\n                        <p>Title:- {data.title}</p>\r\n                    </div>\r\n\r\n                );\r\n            })}\r\n        </React.Fragment>\r\n    }\r\n    const spinner={\r\n        color:'blue',\r\n        textalign:'center'\r\n    }\r\n   \r\n    return (\r\n        <div>           \r\n            <p>Records count {recordCount} . By custom hook.</p> <p>Refreshed {refresh}</p>\r\n            <button onClick={()=> setrefresh(refresh+1)}>refresh</button><br></br>\r\n            \r\n            {tableRows}\r\n           \r\n            <div  className='paginationPostion'>\r\n                    <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    //subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n                    </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default  Gallery;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction useGetListCount(){\r\n    const [count ,setCount]=useState(0);\r\n\r\n    useEffect(() => {        \r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setCount(result.length)\r\n                }\r\n        )\r\n    }, []);\r\n   return count;\r\n}\r\nexport default useGetListCount;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useGetListCount from '../Components/customHook';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { CSVLink } from \"react-csv\";\r\nimport '../App.css';\r\n\r\nfunction Table() {\r\n    const [list, setList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setrefresh] = useState(0); \r\n    \r\n    const [offset, setOffset] = useState(0);\r\n    const [perPage] = useState(5);\r\n    const [pageCount, setPageCount] = useState(0)\r\n    \r\n  \r\n\r\n    useEffect(() => {\r\n        setLoading(false);\r\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setList(result);\r\n                    setLoading(true);                    \r\n                    setList(result.slice(offset, offset + perPage));\r\n                    setPageCount(Math.ceil(result.length / perPage)); \r\n                    console.log(list, loading,offset,pageCount);                     \r\n                }\r\n        )                                                     \r\n        //return()=>{alert('Use effect Clean up Function running')}\r\n    }, [refresh,offset]);\r\n\r\n    const handlePageClick = (e:any) => {\r\n        const selectedPage = e.selected;\r\n        setOffset(selectedPage *perPage)\r\n    };\r\n    let tableRows = null;\r\n\r\n    if (list) {\r\n        tableRows = <React.Fragment>\r\n            {list.map((data:any, index) => {\r\n                return (\r\n                    <tr key={data.id}>\r\n                        <td >\r\n                            {data.id}\r\n                        </td>\r\n                        <td >\r\n                            {data.title}\r\n                        </td>\r\n                        <td >\r\n                            {data.body}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })}\r\n        </React.Fragment>\r\n    }\r\n    const spinner={\r\n        color:'blue',\r\n        textalign:'center'\r\n    }\r\n    let recordCount=useGetListCount();\r\n    return (\r\n        <div>\r\n            <p>Records count {recordCount} . By custom hook.</p> <p>Refreshed {refresh}</p>\r\n            <button onClick={()=> setrefresh(refresh+1)}>refresh</button>\r\n            <button className='paginationPostion'><CSVLink data={list}  filename={\"my-file.csv\"}>Download me</CSVLink></button>\r\n            <table id=\"holidayTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title </th>\r\n                        <th>body</th>\r\n                    </tr>   \r\n                </thead>\r\n                <tbody>\r\n                {loading? tableRows:<tr style={spinner}><td>Data is loading ......</td></tr>}\r\n                </tbody>                                                                  \r\n            </table>\r\n            <div  className='paginationPostion'>\r\n                    <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    // subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n                    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n\r\n","export default class userDetail{\r\n    name?:string ;\r\n        mobile?:number;\r\n        mail?:string;\r\n        language?:string[];\r\n        city?:string;\r\n        gender?:string\r\n        \r\n        constructor(name?:string ,mobile?:number,mail?:string,language?:string[],city?:string,gender?:string){\r\n            this.name=name;\r\n            this.mobile=mobile;\r\n            this.mail=mail;\r\n            this.language=language;\r\n            this.city=city;\r\n            this.gender=gender;\r\n        }\r\n    \r\n}","import React, { useState } from 'react';\r\nimport '../CssModules/form.css'\r\nimport formModel from '../models/formModel'\r\n\r\n\r\nconst languageList = [\r\n    { value: \"english\", label: \"English\" },\r\n    { value: \"hindi\", label: \"Hindi\" },\r\n    { value: \"spanish\", label: \"Spanish\" },\r\n    { value: \"arabic\", label: \"Arabic\" }\r\n];\r\n\r\nconst UserForm =()=>{\r\n  \r\n const [form ,setForm]=useState<formModel>();\r\n let uform=new formModel();\r\n \r\n\r\n function inputChange(e:React.ChangeEvent<HTMLInputElement>){\r\n    const { name, value, checked } = e.target;    \r\n    switch(name)    {\r\n        case \"name\":\r\n            uform.name=value;\r\n            break;\r\n        case \"mobile\":\r\n             uform.mobile=+value;\r\n             break;\r\n        case \"mail\":\r\n            uform.mail=value;\r\n             break; \r\n        case \"language\":\r\n           // console.log(name,value,checked)\r\n            if(checked){uform.language?.push(value)}\r\n            else {uform.language?.filter(x=> x!==value)}\r\n            break;\r\n        case \"gender\":\r\n            if(checked){uform.gender=value}\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n }\r\n \r\n const submitForm=(e:React.FormEvent<HTMLFormElement>)=>{\r\n    e.preventDefault();\r\n     console.log(uform)\r\n     alert(JSON.stringify(uform))\r\n     setForm(uform);      \r\n     //document.getElementById(\"iform\").reset();\r\n }\r\n\r\n    return (        \r\n        <div id='deatilsForm'>\r\n            <p>Deatils Form</p>\r\n            <form id=\"iform\" onSubmit={submitForm}>\r\n            <ul>\r\n                <li>\r\n                    <label>Name : </label>\r\n                    <input type=\"text\" name=\"name\" value={uform.name} onChange={inputChange} />\r\n                </li>\r\n                <li>\r\n                    <label>mobile: </label>\r\n                    <input type=\"number\" name=\"mobile\" value={uform.mobile}  onChange={inputChange} />\r\n                </li>\r\n                <li>\r\n                    <label>mail: </label>\r\n                    <input type=\"text\" name=\"mail\" value={uform.mail} onChange={inputChange}/>\r\n                </li>\r\n                <li>\r\n                <label>Language : </label>\r\n                    {languageList.map((x, i) => {\r\n                        return (\r\n                            <label key={i} >\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"language\"\r\n                                    value={x.value}\r\n                                    checked={uform.language?.includes(x.value)}\r\n                                    onChange={inputChange}\r\n                                />{\" \"}\r\n                                {x.label}\r\n                            </label>\r\n                        );\r\n                    })}\r\n                </li>\r\n\r\n                <li>\r\n                    <label>city : </label>\r\n                    <select name=\"city\" id=\"city\"  onChange={(e)=>uform.city=e.target.value} >\r\n                        <option >None</option>\r\n                        <option value=\"HYD\">HYD</option>\r\n                        <option value=\"Chennai\">Chennai</option>\r\n                        <option value=\"Pune\">Pune</option>\r\n                        <option value=\"Delhi\">Delhi</option>\r\n                    </select>\r\n                </li>\r\n                <li>\r\n                    <label>Gender : </label>\r\n                    <input type=\"radio\" id=\"male\" value=\"male\" name=\"gender\" onChange={inputChange}/>\r\n                    <label htmlFor=\"male\" >Male</label>\r\n                    <input type=\"radio\" id=\"female\" value=\"female\" name=\"gender\" onChange={inputChange}/>\r\n                    <label htmlFor=\"female\" >Female</label>\r\n                </li>\r\n            </ul>\r\n            <button value=\"Submit\" >Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserForm;","import './App.css';\r\nimport Header from './Components/Header';\r\nimport Home from './Components/Home'\r\nimport Faq from './Components/Faq';\r\nimport Gallery from './Components/Gallery';\r\nimport React,{useState} from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Table from './Table/Table'\r\nimport userForm from './Components/userForm';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (       \r\n      <Router>\r\n        <React.Fragment>\r\n          <Header />\r\n          <div className=\"wrapper\">\r\n            <Switch>\r\n              <Route path={\"/\"} exact component={Home} />\r\n              <Route path={\"/Table\"} exact component={Table} />\r\n              <Route path={\"/Gallery\"} exact component={Gallery} />\r\n              <Route path={\"/userForm\"} exact component={userForm} />\r\n              <Route path={\"/FAQ\"} exact component={Faq} />\r\n            </Switch>\r\n          </div>\r\n        </React.Fragment>\r\n      </Router>         \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}